---
- name: telegraf
  hosts: all
  become: yes
  become_user: root

  vars:
    telegraf_install_url: "https://dl.influxdata.com/telegraf/releases/telegraf_1.11.2-1_amd64.deb"
    telegraf_sha256sum: "39ef98f2ae427c480f8f0ca55e941acf061f208f67f1ae73d6e74ea926f819ef"
    telegraf_hostname: "{{ deploy_host }}"

    python_testnet_flag: "{{ '--testnet' if testnet else '' }}"
  tasks:

    # install
    - name: download telegraf package
      get_url:
        url: "{{ telegraf_install_url }}"
        dest: /tmp/telegraf-ansible-download.deb
        sha256sum: "{{ telegraf_sha256sum }}"

    - name: install downloaded telegraf package
      apt:
        deb: /tmp/telegraf-ansible-download.deb
        state: present
      register: apt_result
      until: apt_result is success
      retries: 2
      delay: 5

    - name: adding telegraf user to group adm (allow to read log files)
      user:
        name: telegraf
        groups: adm
        append: yes

    - file: path=/opt/telegraf state=directory

    - name: install pip3
      apt: name=python3-pip state=present

    - name: install python packages
      shell: pip3 install requests==2.22.0

    # blockchain clients
    - name: install bitcoin telegraf script
      template:
        src: templates/telegraf_bitcoin.py
        dest: /opt/telegraf/telegraf_bitcoin.py
        mode: 0755

    - name: install waves telegraf script
      template:
        src: templates/telegraf_waves.py
        dest: /opt/telegraf/telegraf_waves.py
        mode: 0755

    - name: install telegraf blockchain config
      template:
        src: templates/telegraf_blockchain.conf.j2
        dest: /etc/telegraf/telegraf.d/blockchain.conf

    # sshd
    - name: install pam sshd script
      template:
        src: templates/pam_sshd.py
        dest: /opt/telegraf/pam_sshd.py
        mode: 0700

    - name: add to pam conf
      lineinfile: dest=/etc/pam.d/sshd line="session required pam_exec.so /opt/telegraf/pam_sshd.py --output /opt/telegraf/sshd/sshd.json"

    - name: install sshd telegraf script
      template:
        src: templates/telegraf_sshd.py
        dest: /opt/telegraf/telegraf_sshd.py
        mode: 0755

    - name: install telegraf sshd config
      template:
        src: templates/telegraf_sshd.conf.j2
        dest: /etc/telegraf/telegraf.d/sshd.conf

    # zap_balance
    - name: install the zap balance config
      template:
        src: templates/telegraf_balance.conf.j2
        dest: /etc/telegraf/telegraf.d/telegraf_balance.conf

    - name: install the zap balance script
      template:
        src: templates/telegraf_balance.py
        dest: /opt/telegraf/telegraf_balance.py
        mode: 0755

    # processes check
    - name: install processes telegraf script
      template:
        src: templates/telegraf_processes.sh
        dest: /opt/telegraf/telegraf_processes.sh
        mode: 0755

    - name: install telegraf processes config
      template:
        src: templates/telegraf_processes.conf.j2
        dest: /etc/telegraf/telegraf.d/telegraf_processes.conf

    # net_response
    - name: install net_response config
      template:
        src: templates/telegraf_ports.conf.j2
        dest: /etc/telegraf/telegraf.d/telegraf_ports.conf

    # general config
    - name: install telegraf config
      template:
        src: templates/telegraf.conf.j2
        dest: /etc/telegraf/telegraf.conf

    - name: restart telegraf
      service: name=telegraf state=restarted
